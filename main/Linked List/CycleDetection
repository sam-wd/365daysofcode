 static boolean hasCycle(SinglyLinkedListNode head) {
            SinglyLinkedListNode slow = head;
        SinglyLinkedListNode fast = head;
        while(fast != null && fast.next != null) {
                slow = slow.next;
                fast = fast.next.next;
                if(slow == fast) {
                        // Slow pointer caught up to the fast one, so there is a loop
                        return true;
                }
        }
        return false; 
        // Fast pointer hit the end of the list, so there is no loop


    }
